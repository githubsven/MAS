__includes ["pso.nls"]

breed [onlookers onlooker]
breed [scouts scout]
breed [employees employee]
breed [foodsources foodsource]

employees-own 
[ 
  nectar_amount 
  best_found_patch_personal fitness ;Save the best found patch 
]

globals
[
  no_bees ;Number of bees in the ABC
  limit ;Limit of onlooker bees
  no_onlookers
  no_employees
  no_scouts
  food_sources
]

to init
  set no_bees 20
  set no_onlookers no_bees / 2 ;50% of the swarm according to D. Karaboga's implementation https://abc.erciyes.edu.tr/pub/tr06_2005.pdf
  set no_employees no_bees / 2 ;Idem
  set no_scouts 1 ;Idem
  
  create-onlookers no_onlookers[ set color yellow ]
  create-scouts no_scouts [ set color blue ]
  create-employees no_employees[
    set color red
    set size 1.5
    set xcor 0
    set ycor 0
  ]
  
  create-foodsources no_employees ; Create a food source for every employed bee
  ask foodsources [ set shape "x" set color red setxy random-pxcor random-pycor]
  
  ask onlookers[]
  ask scouts []
  ask employees [] 
end

to abc
  go
  checkFitnessImprovement
  tick
end

to checkFitnessImprovement
ask max-one-of employees [best_found_patch_personal]
  [
    if best_found_patch_global < best_found_patch_personal
    [
      set best_found_patch_global best_found_patch_personal
    ]
  ]
  if best_found_patch_global = [score] of optimum
    [ stop ]
end

to go
  print [xcor] of employee 12
  tick
end
